## █▄▀ █▀▀ █▄█ █▄▄ █ █▄░█ █▀▄ █ █▄░█ █▀▀ █▀
## █░█ ██▄ ░█░ █▄█ █ █░▀█ █▄▀ █ █░▀█ █▄█ ▄█

# see https://wiki.hyprland.org/configuring/keywords/ for more
# example binds, see https://wiki.hyprland.org/configuring/binds/ for more

# Grouping of binds for easier management
#  $d=[Group Name|Subgroup Name1|Subgroup Name2|...]
# '$d' is a variable that is used to group binds together (or use another variable)
# This is only for organization purposes and is not a defined hyprland variable
# What we did here is to modify the Description of the binds to include the group name
# The $d will be parsed as a separate key to be use for a GUI or something pretty
# [Main|Subgroup1|Subgroup2|...]
# Main - The main groupname
# Subgroup1.. - The subgroup names can be use to avoid repeating the same description


#*  Variables 
# Default if commented out
# $mainMod = Super # super / meta / windows key
# Assign apps
# $TERMINAL = kitty
$EDITOR = cursor
# $EXPLORER = dolphin
# $BROWSER = firefox

$wm=Window Management
$d=[$wm]
bindd = $mainMod, Q, $d close focused window, exec, $scrPath/dontkillsteam.sh
bindd = $mainMod, Delete, $d kill hyprland session, exit
bindd = $mainMod, Space, $d Toggle floating, togglefloating
bindd = $mainMod, L, $d lock screen, exec, lockscreen.sh
bindd = $mainMod, Escape, $d logout menu, exec, $scrPath/logoutlaunch.sh

$d=[$wm|Change focus]
bindd = $mainMod, Left, $d focus left, movefocus, l
bindd = $mainMod, Right, $d focus right , movefocus, r
bindd = $mainMod, Up, $d focus up , movefocus, u
bindd = $mainMod, Down , $d focus down, movefocus, d

$d=[$wm|Resize Active Window]
# Resize windows
bindde = $mainMod Ctrl, Right, $d resize window right , resizeactive, 30 0
bindde = $mainMod Ctrl, Left, $d resize window left, resizeactive, -30 0
bindde = $mainMod Ctrl, Up, $d resize window up, resizeactive, 0 -30
bindde = $mainMod Ctrl, Down, $d resize  window down, resizeactive, 0 30

# Move active window around current workspace with mainMod + Shift + Control [←→↑↓]
$d=[$wm|Move active window across workspace]
$moveactivewindow=grep -q "true" <<< $(hyprctl activewindow -j | jq -r .floating) && hyprctl dispatch moveactive
bindde = $mainMod Shift, left, Move active window to the left, exec, $moveactivewindow -10 0 || hyprctl dispatch movewindow l
bindde = $mainMod Shift, right, Move active window to the right, exec, $moveactivewindow 10 0 || hyprctl dispatch movewindow r
bindde = $mainMod Shift, up, Move active window up, exec, $moveactivewindow  0 -10 || hyprctl dispatch movewindow u
bindde = $mainMod Shift, down, Move active window down, exec, $moveactivewindow 0 10 || hyprctl dispatch movewindow d

# Move/Resize focused window
$d=[$wm|Move & Resize with mouse]
binddm = $mainMod, mouse:272, $d hold to move window, movewindow
binddm = $mainMod, mouse:273, $d hold to resize window, resizewindow

# Toggle focused window split
$d=[$wm]
bindd = $mainMod, J, $d toggle split, togglesplit

$l=Launcher
$d=[$l|Apps]
bindd = $mainMod, Return, $d terminal emulator , exec, $TERMINAL
bindd = $mainMod Shift, Return, $d dropdown terminal , exec, hyde-shell pypr toggle console
bindd = $mainMod, T, $d file explorer , exec, $EXPLORER
bindd = $mainMod, E, $d text editor , exec, $EDITOR
bindd = $mainMod, B, $d web browser , exec, $BROWSER

$d=[$l|Rofi menus]
$rofi-launch=$scrPath/rofilaunch.sh
bindd = $mainMod, A, $d application finder , exec, pkill -x rofi || $rofi-launch d
bindd = $mainMod, TAB, $d window switcher , exec, pkill -x rofi || $rofi-launch w
bindd = $mainMod Shift, TAB, $d file finder , exec, pkill -x rofi || $rofi-launch f
bindd = $mainMod, slash, $d keybindings hint, exec, pkill -x rofi || $scrPath/keybinds_hint.sh c # launch keybinds hint
bindd = $mainMod Shift, E, $d emoji  picker , exec, pkill -x rofi || $scrPath/emoji-picker.sh # launch emoji picker
bindd = $mainMod Alt, E, $d glyph picker , exec, pkill -x rofi || $scrPath/glyph-picker.sh # launch glyph picker
bindd = $mainMod, V, $d clipboard ,  exec, pkill -x rofi || $scrPath/cliphist.sh -c # launch clipboard,
bindd = $mainMod Shift, V, $d clipboard manager , exec, pkill -x rofi || $scrPath/cliphist.sh # launch clipboard Manager
bindd = $mainMod Shift, A, $d select rofi launcher , exec, pkill -x rofi || $scrPath/rofiselect.sh # launch select menu


$hc=Hardware Controls
$d=[$hc|Audio]
binddl  = , XF86AudioMute,$d  toggle mute output, exec, $scrPath/volumecontrol.sh -o m # toggle audio mute
binddl  = , XF86AudioMicMute,$d un/mute microphone  , exec, $scrPath/volumecontrol.sh -i m # toggle microphone mute
binddel = , XF86AudioLowerVolume, $d decrease volume , exec, $scrPath/volumecontrol.sh -o d # decrease volume
binddel = , XF86AudioRaiseVolume, $d increase volume , exec, $scrPath/volumecontrol.sh -o i # increase volume

$d=[$hc|Media]
binddl  = , XF86AudioPlay,$d play media, exec, playerctl play-pause # toggle between media play and pause
binddl  = , XF86AudioPause,$d pause media, exec, playerctl play-pause # toggle between media play and pause
binddl  = , XF86AudioNext,$d next media  , exec, playerctl next # media next
binddl  = , XF86AudioPrev,$d  previous media , exec, playerctl previous # media previous

$d=[$hc|Brightness]
binddel = , XF86MonBrightnessUp, $d increase brightness , exec, $scrPath/brightnesscontrol.sh i # increase brightness
binddel = , XF86MonBrightnessDown, $d decrease brightness , exec, $scrPath/brightnesscontrol.sh d # decrease brightness


$ut=Utilities
$d=[$ut]
bindd = $mainMod, G, $d game mode , exec, $scrPath/gamemode.sh # disable hypr effects for gamemode
bindd = $mainMod Shift, G, $d open game launcher , exec, $scrPath/gamelauncher.sh # run game launcher for steam and lutris
bindd = $mainMod, M, $d mpv_music , exec, $scrPath/mpv.sh
bindd = $mainMod, F, exec, fullscreen, 1
bindd = $mainMod Shift, F, exec, fullscreen, 0 

$d=[$ut|Screen Capture]
bindd = $mainMod, P, $d color picker, exec, hyprpicker -an # Pick color (Hex) >> clipboard#
bindd = , Print, $d freeze and snip screen, exec, $scrPath/screenshot.sh sf # partial screenshot capture (frozen screen)
binddl = $mainMod, Print, $d print monitor , exec, $scrPath/screenshot.sh m # monitor screenshot capture
binddl = $mainMod Shift, Print, $d print all monitors , exec, $scrPath/screenshot.sh p # all monitors screenshot capture

# TODO Make a main rofi menu for these selectors
$rice=Theming and Wallpaper
$d=[$rice]
bindd = $mainMod, W, $d select a global wallpaper , exec, pkill -x rofi || $scrPath/wallpaper.sh -SG # launch wallpaper select menu
bindd = $mainMod, K, $d next waybar layout , exec, $scrPath/wbarconfgen.sh n # next waybar mode
bindd = $mainMod Shift, K, $d previous waybar layout , exec, $scrPath/wbarconfgen.sh p # previous waybar mode
bindd = $mainMod Shift, Backspace, $d wallbash mode selector , exec, pkill -x rofi || $scrPath/wallbashtoggle.sh -m # launch wallbash mode select menu
bindd = $mainMod, Backspace, $d select a theme, exec, pkill -x rofi || $scrPath/themeselect.sh # launch theme select menu
bindd = $mainMod+Shift, L, $d select hyprlock layout, exec, pkill -x rofi || $scrPath/hyprlock.sh --select # launch hyprlock layout select menu



$ws=Workspaces
$d=[$ws|Navigation]
bindd = $mainMod, 1, $d navigate to workspace 1 , workspace, 1
bindd = $mainMod, 2, $d navigate to workspace 2 , workspace, 2
bindd = $mainMod, 3, $d navigate to workspace 3 , workspace, 3
bindd = $mainMod, 4, $d navigate to workspace 4 , workspace, 4
bindd = $mainMod, 5, $d navigate to workspace 5 , workspace, 5
bindd = $mainMod, 6, $d navigate to workspace 6 , workspace, 6
bindd = $mainMod, 7, $d navigate to workspace 7 , workspace, 7
bindd = $mainMod, 8, $d navigate to workspace 8 , workspace, 8
bindd = $mainMod, 9, $d navigate to workspace 9 , workspace, 9
bindd = $mainMod, 0, $d navigate to workspace 10 , workspace, 10

# Move focused window to a workspace
$d=[$ws|Move window to workspace]
bindd = $mainMod Shift, 1, $d move to workspace 1 , movetoworkspace, 1
bindd = $mainMod Shift, 2, $d move to workspace 2 , movetoworkspace, 2
bindd = $mainMod Shift, 3, $d move to workspace 3 , movetoworkspace, 3
bindd = $mainMod Shift, 4, $d move to workspace 4 , movetoworkspace, 4
bindd = $mainMod Shift, 5, $d move to workspace 5 , movetoworkspace, 5
bindd = $mainMod Shift, 6, $d move to workspace 6 , movetoworkspace, 6
bindd = $mainMod Shift, 7, $d move to workspace 7 , movetoworkspace, 7
bindd = $mainMod Shift, 8, $d move to workspace 8 , movetoworkspace, 8
bindd = $mainMod Shift, 9, $d move to workspace 9 , movetoworkspace, 9
bindd = $mainMod Shift, 0, $d move to workspace 10 , movetoworkspace, 10

# Move/Switch to special workspace (scratchpad)
$d=[$ws|Navigation|Special workspace]
bindd = $mainMod Shift, S, $d move to scratchpad  , movetoworkspace, special
bindd = $mainMod, S, $d toggle scratchpad ,  togglespecialworkspace

$d=#! unset the group name
